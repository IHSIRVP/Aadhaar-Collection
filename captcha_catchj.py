import base64

# Replace this with your actual base64 string
base64_string = """
data:application/image;base64,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
"""

# Step 1: Remove the metadata prefix if present
if "," in base64_string:
    header, base64_data = base64_string.split(",", 1)
else:
    base64_data = base64_string

# Step 2: Decode the Base64 string
image_data = base64.b64decode(base64_data)

# Step 3: Save it to a file
filename = "downloaded_image.jpg"  # or .png based on actual image format
with open(filename, "wb") as f:
    f.write(image_data)

print(f"Image saved to {filename}")
